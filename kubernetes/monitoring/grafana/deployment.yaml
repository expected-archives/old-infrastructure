apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  replicas: 1
  serviceName: grafana
  volumeClaimTemplates: []
  selector:
    matchLabels:
      app: grafana
  template:
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - name: http
              containerPort: 3000
          envFrom:
            - secretRef:
                name: grafana
          volumeMounts:
            - name: config
              mountPath: /etc/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana
              mountPath: /var/lib/grafana
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 256Mi
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana
